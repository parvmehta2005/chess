{"ast":null,"code":"var _jsxFileName = \"D:\\\\My React Apps\\\\chess\\\\chess-frontend\\\\src\\\\components\\\\Game.js\",\n  _s = $RefreshSig$();\n// Game.js (highlighting logic updated)\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport ChessPiece from './ChessPiece';\nimport Navbar from './Navbar';\nimport './Game.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [game, setGame] = useState(null);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  const [possibleMoves, setPossibleMoves] = useState([]);\n  const [error, setError] = useState('');\n  const [socket, setSocket] = useState(null);\n  const [lastMove, setLastMove] = useState(null);\n  const [playerColor, setPlayerColor] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (!token || !user) {\n      navigate('/login');\n      return;\n    }\n    setUserId(user.id);\n    setUser(user);\n    const newSocket = io('http://localhost:5000', {\n      auth: {\n        token\n      },\n      transports: ['websocket'],\n      query: {\n        userId: user.id,\n        gameId: id\n      }\n    });\n    newSocket.on('connect', () => {\n      newSocket.emit('join-game', {\n        gameId: id,\n        playerId: user.id\n      });\n    });\n    newSocket.on('connect_error', () => setError('Failed to connect to game server'));\n    newSocket.on('game-state', ({\n      game: gameState\n    }) => setGame(gameState));\n    newSocket.on('game-updated', ({\n      game: updatedGame,\n      lastMoveInfo\n    }) => {\n      setGame(updatedGame);\n      if (lastMoveInfo) {\n        setLastMove({\n          from: lastMoveInfo.from,\n          to: lastMoveInfo.to,\n          captured: lastMoveInfo.captured\n        });\n      }\n    });\n    newSocket.on('error', ({\n      message\n    }) => setError(message));\n    setSocket(newSocket);\n    fetchGame();\n    return () => newSocket.disconnect();\n  }, [id, navigate]);\n  const fetchGame = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const user = JSON.parse(localStorage.getItem('user'));\n      const res = await axios.get(`http://localhost:5000/api/games/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setGame(res.data.game);\n      if (res.data.game.players.white === user.id) setPlayerColor('white');else if (res.data.game.players.black === user.id) setPlayerColor('black');\n    } catch {\n      setError('Failed to fetch game');\n    }\n  };\n  const handleSquareClick = async (row, col) => {\n    if (!game || game.status !== 'active') return;\n    const piece = game.board[row][col];\n    const isWhitePiece = piece && piece.toUpperCase && piece.toUpperCase() === piece;\n    const isWhiteTurn = !game.turn;\n    const isLocalMode = game.gameMode === 'local';\n    const canMove = isLocalMode || isWhitePiece === isWhiteTurn && (isWhitePiece && playerColor === 'white' || !isWhitePiece && playerColor === 'black');\n    if (!isLocalMode && isWhiteTurn !== (playerColor === 'white')) {\n      setSelectedPiece(null);\n      setPossibleMoves([]);\n      setError(`It's ${isWhiteTurn ? 'White' : 'Black'}'s turn`);\n      setTimeout(() => setError(''), 2000);\n      return;\n    }\n    if (selectedPiece) {\n      const [fromRow, fromCol] = [selectedPiece.row, selectedPiece.col];\n      try {\n        const token = localStorage.getItem('token');\n        const user = JSON.parse(localStorage.getItem('user'));\n        const res = await axios.post(`http://localhost:5000/api/games/${id}/move`, {\n          from: [fromRow, fromCol],\n          to: [row, col],\n          playerId: user.id\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (res.data.success) {\n          setSelectedPiece(null);\n          setPossibleMoves([]);\n          setError('');\n        }\n      } catch (err) {\n        var _err$response, _err$response$data;\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Failed to make move');\n        setSelectedPiece(null);\n        setPossibleMoves([]);\n      }\n    } else if (piece && canMove) {\n      try {\n        var _res$data$moves;\n        const token = localStorage.getItem('token');\n        const res = await axios.post(`http://localhost:5000/api/games/${id}/possible-moves`, {\n          from: [row, col]\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (((_res$data$moves = res.data.moves) === null || _res$data$moves === void 0 ? void 0 : _res$data$moves.length) > 0) {\n          setSelectedPiece({\n            row,\n            col\n          });\n          setPossibleMoves(res.data.moves);\n          setError('');\n        }\n      } catch {\n        setError('Failed to get possible moves');\n      }\n    } else {\n      setSelectedPiece(null);\n      setPossibleMoves([]);\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    navigate('/login');\n  };\n  if (!game) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: \"Loading game...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      username: user === null || user === void 0 ? void 0 : user.username,\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chess-board-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chess-board\",\n          children: game.board.map((row, rowIndex) => row.map((piece, colIndex) => {\n            const isWhite = (rowIndex + colIndex) % 2 === 0;\n            const isSelected = (selectedPiece === null || selectedPiece === void 0 ? void 0 : selectedPiece.row) === rowIndex && (selectedPiece === null || selectedPiece === void 0 ? void 0 : selectedPiece.col) === colIndex;\n            const move = possibleMoves.find(move => move.row === rowIndex && move.col === colIndex);\n            const classList = ['square', isWhite ? 'white' : 'black'];\n            if (isSelected) classList.push('selected');\n            if (move) classList.push(move.isCapture ? 'possible-capture' : 'possible-move');\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classList.join(' '),\n              onClick: () => handleSquareClick(rowIndex, colIndex),\n              children: piece && /*#__PURE__*/_jsxDEV(ChessPiece, {\n                piece: piece\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 31\n              }, this)\n            }, `${rowIndex}-${colIndex}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 19\n            }, this);\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Game Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `turn-indicator ${game.turn ? 'active' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"piece\",\n              children: game.turn ? '♟' : '♙'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text\",\n              children: game.turn ? 'Your turn' : \"Opponent's turn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-button secondary\",\n            onClick: handleLogout,\n            children: \"Resign\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-button\",\n            children: \"Offer Draw\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"QwVYquX/C/uHvaThGVu3CuKzKfE=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","axios","io","ChessPiece","Navbar","jsxDEV","_jsxDEV","Game","_s","id","navigate","game","setGame","selectedPiece","setSelectedPiece","possibleMoves","setPossibleMoves","error","setError","socket","setSocket","lastMove","setLastMove","playerColor","setPlayerColor","userId","setUserId","user","setUser","token","localStorage","getItem","JSON","parse","newSocket","auth","transports","query","gameId","on","emit","playerId","gameState","updatedGame","lastMoveInfo","from","to","captured","message","fetchGame","disconnect","res","get","headers","Authorization","data","players","white","black","handleSquareClick","row","col","status","piece","board","isWhitePiece","toUpperCase","isWhiteTurn","turn","isLocalMode","gameMode","canMove","setTimeout","fromRow","fromCol","post","success","err","_err$response","_err$response$data","response","_res$data$moves","moves","length","handleLogout","removeItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","username","onLogout","map","rowIndex","colIndex","isWhite","isSelected","move","find","classList","push","isCapture","join","onClick","_c","$RefreshReg$"],"sources":["D:/My React Apps/chess/chess-frontend/src/components/Game.js"],"sourcesContent":["// Game.js (highlighting logic updated)\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport io from 'socket.io-client';\r\nimport ChessPiece from './ChessPiece';\r\nimport Navbar from './Navbar';\r\nimport './Game.css';\r\n\r\nconst Game = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [game, setGame] = useState(null);\r\n  const [selectedPiece, setSelectedPiece] = useState(null);\r\n  const [possibleMoves, setPossibleMoves] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const [socket, setSocket] = useState(null);\r\n  const [lastMove, setLastMove] = useState(null);\r\n  const [playerColor, setPlayerColor] = useState(null);\r\n  const [userId, setUserId] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    if (!token || !user) {\r\n      navigate('/login');\r\n      return;\r\n    }\r\n    setUserId(user.id);\r\n    setUser(user);\r\n\r\n    const newSocket = io('http://localhost:5000', {\r\n      auth: { token },\r\n      transports: ['websocket'],\r\n      query: { userId: user.id, gameId: id }\r\n    });\r\n\r\n    newSocket.on('connect', () => {\r\n      newSocket.emit('join-game', { gameId: id, playerId: user.id });\r\n    });\r\n    newSocket.on('connect_error', () => setError('Failed to connect to game server'));\r\n    newSocket.on('game-state', ({ game: gameState }) => setGame(gameState));\r\n    newSocket.on('game-updated', ({ game: updatedGame, lastMoveInfo }) => {\r\n      setGame(updatedGame);\r\n      if (lastMoveInfo) {\r\n        setLastMove({ from: lastMoveInfo.from, to: lastMoveInfo.to, captured: lastMoveInfo.captured });\r\n      }\r\n    });\r\n    newSocket.on('error', ({ message }) => setError(message));\r\n    setSocket(newSocket);\r\n    fetchGame();\r\n\r\n    return () => newSocket.disconnect();\r\n  }, [id, navigate]);\r\n\r\n  const fetchGame = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const user = JSON.parse(localStorage.getItem('user'));\r\n      const res = await axios.get(`http://localhost:5000/api/games/${id}`, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      setGame(res.data.game);\r\n      if (res.data.game.players.white === user.id) setPlayerColor('white');\r\n      else if (res.data.game.players.black === user.id) setPlayerColor('black');\r\n    } catch {\r\n      setError('Failed to fetch game');\r\n    }\r\n  };\r\n\r\n  const handleSquareClick = async (row, col) => {\r\n    if (!game || game.status !== 'active') return;\r\n    const piece = game.board[row][col];\r\n    const isWhitePiece = piece && piece.toUpperCase && piece.toUpperCase() === piece;\r\n    const isWhiteTurn = !game.turn;\r\n    const isLocalMode = game.gameMode === 'local';\r\n    const canMove = isLocalMode || (isWhitePiece === isWhiteTurn && ((isWhitePiece && playerColor === 'white') || (!isWhitePiece && playerColor === 'black')));\r\n\r\n    if (!isLocalMode && isWhiteTurn !== (playerColor === 'white')) {\r\n      setSelectedPiece(null);\r\n      setPossibleMoves([]);\r\n      setError(`It's ${isWhiteTurn ? 'White' : 'Black'}'s turn`);\r\n      setTimeout(() => setError(''), 2000);\r\n      return;\r\n    }\r\n\r\n    if (selectedPiece) {\r\n      const [fromRow, fromCol] = [selectedPiece.row, selectedPiece.col];\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const user = JSON.parse(localStorage.getItem('user'));\r\n        const res = await axios.post(`http://localhost:5000/api/games/${id}/move`, {\r\n          from: [fromRow, fromCol], to: [row, col], playerId: user.id\r\n        }, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n\r\n        if (res.data.success) {\r\n          setSelectedPiece(null);\r\n          setPossibleMoves([]);\r\n          setError('');\r\n        }\r\n      } catch (err) {\r\n        setError(err.response?.data?.error || 'Failed to make move');\r\n        setSelectedPiece(null);\r\n        setPossibleMoves([]);\r\n      }\r\n    } else if (piece && canMove) {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const res = await axios.post(`http://localhost:5000/api/games/${id}/possible-moves`, {\r\n          from: [row, col]\r\n        }, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n\r\n        if (res.data.moves?.length > 0) {\r\n          setSelectedPiece({ row, col });\r\n          setPossibleMoves(res.data.moves);\r\n          setError('');\r\n        }\r\n      } catch {\r\n        setError('Failed to get possible moves');\r\n      }\r\n    } else {\r\n      setSelectedPiece(null);\r\n      setPossibleMoves([]);\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    navigate('/login');\r\n  };\r\n\r\n  if (!game) return <div className=\"game-container\">Loading game...</div>;\r\n\r\n  return (\r\n    <div className=\"game-container\">\r\n      <Navbar username={user?.username} onLogout={handleLogout} />\r\n      <div className=\"game-content\">\r\n        <div className=\"chess-board-container\">\r\n          <div className=\"chess-board\">\r\n            {game.board.map((row, rowIndex) => (\r\n              row.map((piece, colIndex) => {\r\n                const isWhite = (rowIndex + colIndex) % 2 === 0;\r\n                const isSelected = selectedPiece?.row === rowIndex && selectedPiece?.col === colIndex;\r\n                const move = possibleMoves.find(move => move.row === rowIndex && move.col === colIndex);\r\n\r\n                const classList = ['square', isWhite ? 'white' : 'black'];\r\n                if (isSelected) classList.push('selected');\r\n                if (move) classList.push(move.isCapture ? 'possible-capture' : 'possible-move');\r\n\r\n                return (\r\n                  <div\r\n                    key={`${rowIndex}-${colIndex}`}\r\n                    className={classList.join(' ')}\r\n                    onClick={() => handleSquareClick(rowIndex, colIndex)}\r\n                  >\r\n                    {piece && <ChessPiece piece={piece} />}\r\n                  </div>\r\n                );\r\n              })\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div className=\"info-card\">\r\n            <h3>Game Status</h3>\r\n            <div className={`turn-indicator ${game.turn ? 'active' : ''}`}>\r\n              <span className=\"piece\">{game.turn ? '♟' : '♙'}</span>\r\n              <span className=\"text\">{game.turn ? 'Your turn' : \"Opponent's turn\"}</span>\r\n            </div>\r\n            {error && <div className=\"error-message\">{error}</div>}\r\n          </div>\r\n          <div className=\"game-controls\">\r\n            <button className=\"control-button secondary\" onClick={handleLogout}>Resign</button>\r\n            <button className=\"control-button\">Offer Draw</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}