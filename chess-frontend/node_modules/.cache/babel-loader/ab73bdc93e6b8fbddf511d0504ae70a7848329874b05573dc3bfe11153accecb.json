{"ast":null,"code":"var _jsxFileName = \"D:\\\\My React Apps\\\\chess\\\\chess-frontend\\\\src\\\\components\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport ChessPiece from './ChessPiece';\nimport './Game.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [game, setGame] = useState(null);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  const [possibleMoves, setPossibleMoves] = useState([]);\n  const [error, setError] = useState('');\n  const [socket, setSocket] = useState(null);\n  const [lastMove, setLastMove] = useState(null);\n  const [playerColor, setPlayerColor] = useState(null);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (!token || !user) {\n      navigate('/login');\n      return;\n    }\n\n    // Connect to socket\n    const newSocket = io('http://localhost:5000', {\n      auth: {\n        token\n      }\n    });\n    setSocket(newSocket);\n\n    // Join game room\n    newSocket.emit('join-game', {\n      gameId: id,\n      playerId: user._id\n    });\n\n    // Listen for game updates\n    newSocket.on('game-updated', ({\n      game: updatedGame,\n      lastMoveInfo\n    }) => {\n      setGame(updatedGame);\n      if (lastMoveInfo) {\n        setLastMove({\n          from: lastMoveInfo.from,\n          to: lastMoveInfo.to,\n          captured: lastMoveInfo.captured\n        });\n      }\n    });\n\n    // Listen for errors\n    newSocket.on('error', ({\n      message\n    }) => {\n      setError(message);\n    });\n\n    // Fetch initial game state\n    fetchGame();\n    return () => {\n      newSocket.disconnect();\n    };\n  }, [id, navigate]);\n  const fetchGame = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const user = JSON.parse(localStorage.getItem('user'));\n      const response = await axios.get(`http://localhost:5000/api/games/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setGame(response.data.game);\n\n      // Set player color\n      if (response.data.game.players.white === user._id) {\n        setPlayerColor('white');\n      } else if (response.data.game.players.black === user._id) {\n        setPlayerColor('black');\n      }\n    } catch (err) {\n      setError('Failed to fetch game');\n      console.error('Error fetching game:', err);\n    }\n  };\n  const getPossibleMoves = (row, col, piece) => {\n    const moves = [];\n    const isWhite = piece === piece.toUpperCase();\n\n    // Basic pawn movement\n    if (piece.toUpperCase() === 'P') {\n      const direction = isWhite ? -1 : 1;\n      const startRow = isWhite ? 6 : 1;\n\n      // Forward move\n      if (row + direction >= 0 && row + direction < 8 && !game.board[row + direction][col]) {\n        moves.push([row + direction, col]);\n\n        // Double move from starting position\n        if (row === startRow && !game.board[row + 2 * direction][col]) {\n          moves.push([row + 2 * direction, col]);\n        }\n      }\n\n      // Capture moves\n      for (const captureCol of [col - 1, col + 1]) {\n        if (captureCol >= 0 && captureCol < 8) {\n          const targetPiece = game.board[row + direction][captureCol];\n          if (targetPiece && targetPiece.toUpperCase() === targetPiece !== isWhite) {\n            moves.push([row + direction, captureCol]);\n          }\n        }\n      }\n    }\n    return moves;\n  };\n  const handleSquareClick = (row, col) => {\n    if (!game || game.status !== 'active') return;\n    if (selectedPiece) {\n      // Try to move the piece\n      const [fromRow, fromCol] = selectedPiece;\n      const user = JSON.parse(localStorage.getItem('user'));\n      socket.emit('make-move', {\n        gameId: id,\n        from: [fromRow, fromCol],\n        to: [row, col],\n        playerId: user._id\n      });\n      setSelectedPiece(null);\n      setPossibleMoves([]);\n    } else {\n      // Select a piece\n      const piece = game.board[row][col];\n      if (piece) {\n        const isWhitePiece = piece === piece.toUpperCase();\n        const isWhiteTurn = !game.turn;\n\n        // Only allow selecting pieces of the current player's color\n        if (isWhitePiece === isWhiteTurn && (isWhitePiece && playerColor === 'white' || !isWhitePiece && playerColor === 'black')) {\n          setSelectedPiece([row, col]);\n          setPossibleMoves(getPossibleMoves(row, col, piece));\n        }\n      }\n    }\n  };\n  const isSquareHighlighted = (row, col) => {\n    if (selectedPiece && possibleMoves.some(move => move[0] === row && move[1] === col)) {\n      return 'possible-move';\n    }\n    if (lastMove) {\n      if (lastMove.from[0] === row && lastMove.from[1] === col || lastMove.to[0] === row && lastMove.to[1] === col) {\n        return lastMove.captured ? 'capture-move' : 'last-move';\n      }\n    }\n    return '';\n  };\n  if (!game) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: \"Loading game...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Chess Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/lobby'),\n        children: \"Back to Lobby\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chess-board\",\n      children: game.board.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: row.map((piece, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `board-square ${(rowIndex + colIndex) % 2 === 0 ? 'white' : 'black'} ${selectedPiece && selectedPiece[0] === rowIndex && selectedPiece[1] === colIndex ? 'selected' : ''} ${isSquareHighlighted(rowIndex, colIndex)}`,\n          onClick: () => handleSquareClick(rowIndex, colIndex),\n          children: /*#__PURE__*/_jsxDEV(ChessPiece, {\n            piece: piece\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 17\n          }, this)\n        }, `${rowIndex}-${colIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: [\"Status: \", game.status, game.inCheck && ` - ${game.checkPlayer} is in check!`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"turn\",\n        children: [\"Current Turn: \", game.turn ? 'Black' : 'White', playerColor && ` (You are ${playerColor})`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"6ow9ddn/DofaR44HXd/sHLnUxnQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","axios","io","ChessPiece","jsxDEV","_jsxDEV","Game","_s","id","navigate","game","setGame","selectedPiece","setSelectedPiece","possibleMoves","setPossibleMoves","error","setError","socket","setSocket","lastMove","setLastMove","playerColor","setPlayerColor","token","localStorage","getItem","user","JSON","parse","newSocket","auth","emit","gameId","playerId","_id","on","updatedGame","lastMoveInfo","from","to","captured","message","fetchGame","disconnect","response","get","headers","Authorization","data","players","white","black","err","console","getPossibleMoves","row","col","piece","moves","isWhite","toUpperCase","direction","startRow","board","push","captureCol","targetPiece","handleSquareClick","status","fromRow","fromCol","isWhitePiece","isWhiteTurn","turn","isSquareHighlighted","some","move","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","rowIndex","colIndex","inCheck","checkPlayer","_c","$RefreshReg$"],"sources":["D:/My React Apps/chess/chess-frontend/src/components/Game.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport io from 'socket.io-client';\r\nimport ChessPiece from './ChessPiece';\r\nimport './Game.css';\r\n\r\nconst Game = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [game, setGame] = useState(null);\r\n  const [selectedPiece, setSelectedPiece] = useState(null);\r\n  const [possibleMoves, setPossibleMoves] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const [socket, setSocket] = useState(null);\r\n  const [lastMove, setLastMove] = useState(null);\r\n  const [playerColor, setPlayerColor] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    \r\n    if (!token || !user) {\r\n      navigate('/login');\r\n      return;\r\n    }\r\n\r\n    // Connect to socket\r\n    const newSocket = io('http://localhost:5000', {\r\n      auth: { token }\r\n    });\r\n    setSocket(newSocket);\r\n\r\n    // Join game room\r\n    newSocket.emit('join-game', { \r\n      gameId: id,\r\n      playerId: user._id\r\n    });\r\n\r\n    // Listen for game updates\r\n    newSocket.on('game-updated', ({ game: updatedGame, lastMoveInfo }) => {\r\n      setGame(updatedGame);\r\n      if (lastMoveInfo) {\r\n        setLastMove({\r\n          from: lastMoveInfo.from,\r\n          to: lastMoveInfo.to,\r\n          captured: lastMoveInfo.captured\r\n        });\r\n      }\r\n    });\r\n\r\n    // Listen for errors\r\n    newSocket.on('error', ({ message }) => {\r\n      setError(message);\r\n    });\r\n\r\n    // Fetch initial game state\r\n    fetchGame();\r\n\r\n    return () => {\r\n      newSocket.disconnect();\r\n    };\r\n  }, [id, navigate]);\r\n\r\n  const fetchGame = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const user = JSON.parse(localStorage.getItem('user'));\r\n      const response = await axios.get(`http://localhost:5000/api/games/${id}`, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      setGame(response.data.game);\r\n      \r\n      // Set player color\r\n      if (response.data.game.players.white === user._id) {\r\n        setPlayerColor('white');\r\n      } else if (response.data.game.players.black === user._id) {\r\n        setPlayerColor('black');\r\n      }\r\n    } catch (err) {\r\n      setError('Failed to fetch game');\r\n      console.error('Error fetching game:', err);\r\n    }\r\n  };\r\n\r\n  const getPossibleMoves = (row, col, piece) => {\r\n    const moves = [];\r\n    const isWhite = piece === piece.toUpperCase();\r\n    \r\n    // Basic pawn movement\r\n    if (piece.toUpperCase() === 'P') {\r\n      const direction = isWhite ? -1 : 1;\r\n      const startRow = isWhite ? 6 : 1;\r\n      \r\n      // Forward move\r\n      if (row + direction >= 0 && row + direction < 8 && !game.board[row + direction][col]) {\r\n        moves.push([row + direction, col]);\r\n        \r\n        // Double move from starting position\r\n        if (row === startRow && !game.board[row + 2 * direction][col]) {\r\n          moves.push([row + 2 * direction, col]);\r\n        }\r\n      }\r\n      \r\n      // Capture moves\r\n      for (const captureCol of [col - 1, col + 1]) {\r\n        if (captureCol >= 0 && captureCol < 8) {\r\n          const targetPiece = game.board[row + direction][captureCol];\r\n          if (targetPiece && (targetPiece.toUpperCase() === targetPiece) !== isWhite) {\r\n            moves.push([row + direction, captureCol]);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    return moves;\r\n  };\r\n\r\n  const handleSquareClick = (row, col) => {\r\n    if (!game || game.status !== 'active') return;\r\n\r\n    if (selectedPiece) {\r\n      // Try to move the piece\r\n      const [fromRow, fromCol] = selectedPiece;\r\n      const user = JSON.parse(localStorage.getItem('user'));\r\n      \r\n      socket.emit('make-move', {\r\n        gameId: id,\r\n        from: [fromRow, fromCol],\r\n        to: [row, col],\r\n        playerId: user._id\r\n      });\r\n      setSelectedPiece(null);\r\n      setPossibleMoves([]);\r\n    } else {\r\n      // Select a piece\r\n      const piece = game.board[row][col];\r\n      if (piece) {\r\n        const isWhitePiece = piece === piece.toUpperCase();\r\n        const isWhiteTurn = !game.turn;\r\n        \r\n        // Only allow selecting pieces of the current player's color\r\n        if (isWhitePiece === isWhiteTurn && \r\n            ((isWhitePiece && playerColor === 'white') || \r\n             (!isWhitePiece && playerColor === 'black'))) {\r\n          setSelectedPiece([row, col]);\r\n          setPossibleMoves(getPossibleMoves(row, col, piece));\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const isSquareHighlighted = (row, col) => {\r\n    if (selectedPiece && possibleMoves.some(move => move[0] === row && move[1] === col)) {\r\n      return 'possible-move';\r\n    }\r\n    if (lastMove) {\r\n      if ((lastMove.from[0] === row && lastMove.from[1] === col) ||\r\n          (lastMove.to[0] === row && lastMove.to[1] === col)) {\r\n        return lastMove.captured ? 'capture-move' : 'last-move';\r\n      }\r\n    }\r\n    return '';\r\n  };\r\n\r\n  if (!game) {\r\n    return <div className=\"game-container\">Loading game...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"game-container\">\r\n      <div className=\"game-header\">\r\n        <h1>Chess Game</h1>\r\n        <button onClick={() => navigate('/lobby')}>Back to Lobby</button>\r\n      </div>\r\n\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n\r\n      <div className=\"chess-board\">\r\n        {game.board.map((row, rowIndex) => (\r\n          <div key={rowIndex} className=\"board-row\">\r\n            {row.map((piece, colIndex) => (\r\n              <div\r\n                key={`${rowIndex}-${colIndex}`}\r\n                className={`board-square ${(rowIndex + colIndex) % 2 === 0 ? 'white' : 'black'} ${\r\n                  selectedPiece && selectedPiece[0] === rowIndex && selectedPiece[1] === colIndex\r\n                    ? 'selected'\r\n                    : ''\r\n                } ${isSquareHighlighted(rowIndex, colIndex)}`}\r\n                onClick={() => handleSquareClick(rowIndex, colIndex)}\r\n              >\r\n                <ChessPiece piece={piece} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"game-info\">\r\n        <div className=\"status\">\r\n          Status: {game.status}\r\n          {game.inCheck && ` - ${game.checkPlayer} is in check!`}\r\n        </div>\r\n        <div className=\"turn\">\r\n          Current Turn: {game.turn ? 'Black' : 'White'}\r\n          {playerColor && ` (You are ${playerColor})`}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}