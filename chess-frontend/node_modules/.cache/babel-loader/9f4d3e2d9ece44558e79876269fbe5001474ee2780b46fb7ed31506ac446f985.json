{"ast":null,"code":"var _jsxFileName = \"D:\\\\My React Apps\\\\chess\\\\chess-frontend\\\\src\\\\components\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport ChessPiece from './ChessPiece';\nimport './Game.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [game, setGame] = useState(null);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  const [possibleMoves, setPossibleMoves] = useState([]);\n  const [error, setError] = useState('');\n  const [socket, setSocket] = useState(null);\n  const [lastMove, setLastMove] = useState(null);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login');\n      return;\n    }\n\n    // Connect to socket\n    const newSocket = io('http://localhost:5000', {\n      auth: {\n        token\n      }\n    });\n    setSocket(newSocket);\n\n    // Join game room\n    newSocket.emit('join-game', {\n      gameId: id\n    });\n\n    // Listen for game updates\n    newSocket.on('game-updated', ({\n      game: updatedGame,\n      lastMoveInfo\n    }) => {\n      setGame(updatedGame);\n      if (lastMoveInfo) {\n        setLastMove({\n          from: lastMoveInfo.from,\n          to: lastMoveInfo.to,\n          captured: lastMoveInfo.captured\n        });\n      }\n    });\n\n    // Fetch initial game state\n    fetchGame();\n    return () => {\n      newSocket.disconnect();\n    };\n  }, [id, navigate]);\n  const fetchGame = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get(`http://localhost:5000/api/games/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setGame(response.data.game);\n    } catch (err) {\n      setError('Failed to fetch game');\n      console.error('Error fetching game:', err);\n    }\n  };\n  const getPossibleMoves = async (row, col) => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.post(`http://localhost:5000/api/games/${id}/possible-moves`, {\n        from: [row, col]\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setPossibleMoves(response.data.moves);\n    } catch (err) {\n      console.error('Error fetching possible moves:', err);\n    }\n  };\n  const handleSquareClick = (row, col) => {\n    if (!game || game.status !== 'active') return;\n    if (selectedPiece) {\n      // Check if the move is valid\n      const isValidMove = possibleMoves.some(move => move[0] === row && move[1] === col);\n      if (isValidMove) {\n        // Try to move the piece\n        const [fromRow, fromCol] = selectedPiece;\n        socket.emit('make-move', {\n          gameId: id,\n          from: [fromRow, fromCol],\n          to: [row, col],\n          playerId: localStorage.getItem('user')\n        });\n      }\n      setSelectedPiece(null);\n      setPossibleMoves([]);\n    } else {\n      // Select a piece\n      const piece = game.board[row][col];\n      if (piece) {\n        const isWhitePiece = piece === piece.toUpperCase();\n        const isWhiteTurn = !game.turn;\n\n        // Only allow selecting pieces of the current player's color\n        if (isWhitePiece === isWhiteTurn) {\n          setSelectedPiece([row, col]);\n          getPossibleMoves(row, col);\n        }\n      }\n    }\n  };\n  const isSquareHighlighted = (row, col) => {\n    if (selectedPiece && possibleMoves.some(move => move[0] === row && move[1] === col)) {\n      return 'possible-move';\n    }\n    if (lastMove) {\n      if (lastMove.from[0] === row && lastMove.from[1] === col || lastMove.to[0] === row && lastMove.to[1] === col) {\n        return lastMove.captured ? 'capture-move' : 'last-move';\n      }\n    }\n    return '';\n  };\n  if (!game) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: \"Loading game...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Chess Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/lobby'),\n        children: \"Back to Lobby\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chess-board\",\n      children: game.board.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: row.map((piece, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `board-square ${(rowIndex + colIndex) % 2 === 0 ? 'white' : 'black'} ${selectedPiece && selectedPiece[0] === rowIndex && selectedPiece[1] === colIndex ? 'selected' : ''} ${isSquareHighlighted(rowIndex, colIndex)}`,\n          onClick: () => handleSquareClick(rowIndex, colIndex),\n          children: /*#__PURE__*/_jsxDEV(ChessPiece, {\n            piece: piece\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 17\n          }, this)\n        }, `${rowIndex}-${colIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: [\"Status: \", game.status, game.inCheck && ` - ${game.checkPlayer} is in check!`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"turn\",\n        children: [\"Current Turn: \", game.turn ? 'Black' : 'White']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"ZssRUiVUTYjXE5Rc9LiFg29VJBk=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","axios","io","ChessPiece","jsxDEV","_jsxDEV","Game","_s","id","navigate","game","setGame","selectedPiece","setSelectedPiece","possibleMoves","setPossibleMoves","error","setError","socket","setSocket","lastMove","setLastMove","token","localStorage","getItem","newSocket","auth","emit","gameId","on","updatedGame","lastMoveInfo","from","to","captured","fetchGame","disconnect","response","get","headers","Authorization","data","err","console","getPossibleMoves","row","col","post","moves","handleSquareClick","status","isValidMove","some","move","fromRow","fromCol","playerId","piece","board","isWhitePiece","toUpperCase","isWhiteTurn","turn","isSquareHighlighted","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","rowIndex","colIndex","inCheck","checkPlayer","_c","$RefreshReg$"],"sources":["D:/My React Apps/chess/chess-frontend/src/components/Game.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport io from 'socket.io-client';\r\nimport ChessPiece from './ChessPiece';\r\nimport './Game.css';\r\n\r\nconst Game = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [game, setGame] = useState(null);\r\n  const [selectedPiece, setSelectedPiece] = useState(null);\r\n  const [possibleMoves, setPossibleMoves] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const [socket, setSocket] = useState(null);\r\n  const [lastMove, setLastMove] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      navigate('/login');\r\n      return;\r\n    }\r\n\r\n    // Connect to socket\r\n    const newSocket = io('http://localhost:5000', {\r\n      auth: { token }\r\n    });\r\n    setSocket(newSocket);\r\n\r\n    // Join game room\r\n    newSocket.emit('join-game', { gameId: id });\r\n\r\n    // Listen for game updates\r\n    newSocket.on('game-updated', ({ game: updatedGame, lastMoveInfo }) => {\r\n      setGame(updatedGame);\r\n      if (lastMoveInfo) {\r\n        setLastMove({\r\n          from: lastMoveInfo.from,\r\n          to: lastMoveInfo.to,\r\n          captured: lastMoveInfo.captured\r\n        });\r\n      }\r\n    });\r\n\r\n    // Fetch initial game state\r\n    fetchGame();\r\n\r\n    return () => {\r\n      newSocket.disconnect();\r\n    };\r\n  }, [id, navigate]);\r\n\r\n  const fetchGame = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.get(`http://localhost:5000/api/games/${id}`, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      setGame(response.data.game);\r\n    } catch (err) {\r\n      setError('Failed to fetch game');\r\n      console.error('Error fetching game:', err);\r\n    }\r\n  };\r\n\r\n  const getPossibleMoves = async (row, col) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.post(\r\n        `http://localhost:5000/api/games/${id}/possible-moves`,\r\n        { from: [row, col] },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setPossibleMoves(response.data.moves);\r\n    } catch (err) {\r\n      console.error('Error fetching possible moves:', err);\r\n    }\r\n  };\r\n\r\n  const handleSquareClick = (row, col) => {\r\n    if (!game || game.status !== 'active') return;\r\n\r\n    if (selectedPiece) {\r\n      // Check if the move is valid\r\n      const isValidMove = possibleMoves.some(\r\n        move => move[0] === row && move[1] === col\r\n      );\r\n\r\n      if (isValidMove) {\r\n        // Try to move the piece\r\n        const [fromRow, fromCol] = selectedPiece;\r\n        socket.emit('make-move', {\r\n          gameId: id,\r\n          from: [fromRow, fromCol],\r\n          to: [row, col],\r\n          playerId: localStorage.getItem('user')\r\n        });\r\n      }\r\n      setSelectedPiece(null);\r\n      setPossibleMoves([]);\r\n    } else {\r\n      // Select a piece\r\n      const piece = game.board[row][col];\r\n      if (piece) {\r\n        const isWhitePiece = piece === piece.toUpperCase();\r\n        const isWhiteTurn = !game.turn;\r\n        \r\n        // Only allow selecting pieces of the current player's color\r\n        if (isWhitePiece === isWhiteTurn) {\r\n          setSelectedPiece([row, col]);\r\n          getPossibleMoves(row, col);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const isSquareHighlighted = (row, col) => {\r\n    if (selectedPiece && possibleMoves.some(move => move[0] === row && move[1] === col)) {\r\n      return 'possible-move';\r\n    }\r\n    if (lastMove) {\r\n      if ((lastMove.from[0] === row && lastMove.from[1] === col) ||\r\n          (lastMove.to[0] === row && lastMove.to[1] === col)) {\r\n        return lastMove.captured ? 'capture-move' : 'last-move';\r\n      }\r\n    }\r\n    return '';\r\n  };\r\n\r\n  if (!game) {\r\n    return <div className=\"game-container\">Loading game...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"game-container\">\r\n      <div className=\"game-header\">\r\n        <h1>Chess Game</h1>\r\n        <button onClick={() => navigate('/lobby')}>Back to Lobby</button>\r\n      </div>\r\n\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n\r\n      <div className=\"chess-board\">\r\n        {game.board.map((row, rowIndex) => (\r\n          <div key={rowIndex} className=\"board-row\">\r\n            {row.map((piece, colIndex) => (\r\n              <div\r\n                key={`${rowIndex}-${colIndex}`}\r\n                className={`board-square ${(rowIndex + colIndex) % 2 === 0 ? 'white' : 'black'} ${\r\n                  selectedPiece && selectedPiece[0] === rowIndex && selectedPiece[1] === colIndex\r\n                    ? 'selected'\r\n                    : ''\r\n                } ${isSquareHighlighted(rowIndex, colIndex)}`}\r\n                onClick={() => handleSquareClick(rowIndex, colIndex)}\r\n              >\r\n                <ChessPiece piece={piece} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"game-info\">\r\n        <div className=\"status\">\r\n          Status: {game.status}\r\n          {game.inCheck && ` - ${game.checkPlayer} is in check!`}\r\n        </div>\r\n        <div className=\"turn\">\r\n          Current Turn: {game.turn ? 'Black' : 'White'}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}