{"ast":null,"code":"var _jsxFileName = \"D:\\\\My React Apps\\\\chess\\\\chess-frontend\\\\src\\\\components\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport ChessPiece from './ChessPiece';\nimport Navbar from './Navbar';\nimport './Game.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [game, setGame] = useState(null);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  const [possibleMoves, setPossibleMoves] = useState([]);\n  const [error, setError] = useState('');\n  const [socket, setSocket] = useState(null);\n  const [lastMove, setLastMove] = useState(null);\n  const [playerColor, setPlayerColor] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (!token || !user) {\n      navigate('/login');\n      return;\n    }\n    setUserId(user.id);\n    setUser(user);\n\n    // Connect to socket with authentication\n    const newSocket = io('http://localhost:5000', {\n      auth: {\n        token\n      },\n      transports: ['websocket'],\n      query: {\n        userId: user.id,\n        gameId: id\n      }\n    });\n\n    // Socket event handlers\n    newSocket.on('connect', () => {\n      console.log('Socket connected');\n      // Join game room after connection is established\n      newSocket.emit('join-game', {\n        gameId: id,\n        playerId: user.id\n      });\n    });\n    newSocket.on('connect_error', error => {\n      console.error('Socket connection error:', error);\n      setError('Failed to connect to game server');\n    });\n    newSocket.on('game-state', ({\n      game: gameState\n    }) => {\n      console.log('Received game state:', gameState);\n      setGame(gameState);\n    });\n    newSocket.on('game-updated', ({\n      game: updatedGame,\n      lastMoveInfo\n    }) => {\n      console.log('Game updated:', updatedGame);\n      setGame(updatedGame);\n      if (lastMoveInfo) {\n        setLastMove({\n          from: lastMoveInfo.from,\n          to: lastMoveInfo.to,\n          captured: lastMoveInfo.captured\n        });\n      }\n    });\n    newSocket.on('error', ({\n      message\n    }) => {\n      console.error('Game error:', message);\n      setError(message);\n    });\n    setSocket(newSocket);\n\n    // Fetch initial game state\n    fetchGame();\n    return () => {\n      if (newSocket) {\n        newSocket.disconnect();\n      }\n    };\n  }, [id, navigate]);\n  const fetchGame = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const user = JSON.parse(localStorage.getItem('user'));\n      const response = await axios.get(`http://localhost:5000/api/games/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const gameData = response.data.game;\n      setGame(gameData);\n\n      // Set player color\n      if (gameData.players.white === user.id) {\n        setPlayerColor('white');\n      } else if (gameData.players.black === user.id) {\n        setPlayerColor('black');\n      }\n    } catch (err) {\n      console.error('Error fetching game:', err);\n      setError('Failed to fetch game');\n    }\n  };\n  const handleSquareClick = async (row, col) => {\n    if (!game || game.status !== 'active') return;\n    const piece = game.board[row][col];\n    const isWhitePiece = piece && piece.toUpperCase() === piece;\n    const isWhiteTurn = !game.turn;\n\n    // For local mode, allow moves for both colors\n    const isLocalMode = game.gameMode === 'local';\n    const canMove = isLocalMode || isWhitePiece === isWhiteTurn && (isWhitePiece && playerColor === 'white' || !isWhitePiece && playerColor === 'black');\n\n    // If it's not the player's turn, show message and return\n    if (!isLocalMode && isWhiteTurn !== (playerColor === 'white')) {\n      setSelectedPiece(null);\n      setPossibleMoves([]);\n      setError(`It's ${isWhiteTurn ? 'White' : 'Black'}'s turn`);\n      // Clear error message after 2 seconds\n      setTimeout(() => setError(''), 2000);\n      return;\n    }\n    if (selectedPiece) {\n      // Try to move the selected piece\n      const [fromRow, fromCol] = selectedPiece;\n      const isWhiteSelectedPiece = game.board[fromRow][fromCol].toUpperCase() === game.board[fromRow][fromCol];\n\n      // For local mode, allow moves for both colors\n      const canMoveSelected = isLocalMode || isWhiteSelectedPiece === isWhiteTurn && (isWhiteSelectedPiece && playerColor === 'white' || !isWhiteSelectedPiece && playerColor === 'black');\n      if (canMoveSelected) {\n        try {\n          const token = localStorage.getItem('token');\n          const user = JSON.parse(localStorage.getItem('user'));\n          const response = await axios.post(`http://localhost:5000/api/games/${id}/move`, {\n            from: selectedPiece,\n            to: [row, col],\n            playerId: user.id\n          }, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          if (response.data.success) {\n            setSelectedPiece(null);\n            setPossibleMoves([]);\n            setError(''); // Clear any existing error messages\n          }\n        } catch (err) {\n          var _err$response, _err$response$data;\n          console.error('Error making move:', err);\n          setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Failed to make move');\n          // Clear selection on error\n          setSelectedPiece(null);\n          setPossibleMoves([]);\n        }\n      } else {\n        // If clicked on an invalid square, clear selection\n        setSelectedPiece(null);\n        setPossibleMoves([]);\n      }\n    } else if (piece && canMove) {\n      // Select a piece\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.post(`http://localhost:5000/api/games/${id}/possible-moves`, {\n          from: [row, col]\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.data.moves && response.data.moves.length > 0) {\n          setSelectedPiece({\n            row,\n            col\n          });\n          setPossibleMoves(response.data.moves);\n          setError(''); // Clear any existing error messages\n        }\n      } catch (err) {\n        console.error('Error getting possible moves:', err);\n        setError('Failed to get possible moves');\n      }\n    } else {\n      // If clicked on an empty square or opponent's piece, clear selection\n      setSelectedPiece(null);\n      setPossibleMoves([]);\n    }\n  };\n  const isSquareHighlighted = (row, col) => {\n    if (selectedPiece && selectedPiece.row === row && selectedPiece.col === col) {\n      return 'selected';\n    }\n    if (selectedPiece && possibleMoves.some(move => move.row === row && move.col === col)) {\n      return 'possible-move';\n    }\n    if (lastMove) {\n      if (lastMove.from[0] === row && lastMove.from[1] === col || lastMove.to[0] === row && lastMove.to[1] === col) {\n        return lastMove.captured ? 'capture-move' : 'last-move';\n      }\n    }\n    return '';\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    navigate('/login');\n  };\n  const handleResign = () => {\n    // Implement resign logic\n  };\n  const handleDrawOffer = () => {\n    // Implement draw offer logic\n  };\n  if (!game) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: \"Loading game...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      username: user === null || user === void 0 ? void 0 : user.username,\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chess-board-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chess-board\",\n          children: game.board.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"board-row\",\n            children: row.map((piece, colIndex) => {\n              const isWhite = (rowIndex + colIndex) % 2 === 0;\n              const position = `${String.fromCharCode(97 + colIndex)}${8 - rowIndex}`;\n              const isSelected = selectedPiece && selectedPiece.row === rowIndex && selectedPiece.col === colIndex;\n              const isPossibleMove = possibleMoves.some(move => move.row === rowIndex && move.col === colIndex);\n              const isPossibleCapture = possibleMoves.some(move => move.row === rowIndex && move.col === colIndex && move.isCapture);\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `square ${isWhite ? 'white' : 'black'} ${isSelected ? 'selected' : ''} ${isPossibleMove ? 'possible-move' : ''} ${isPossibleCapture ? 'possible-capture' : ''}`,\n                onClick: () => handleSquareClick(rowIndex, colIndex),\n                children: piece && /*#__PURE__*/_jsxDEV(ChessPiece, {\n                  piece: piece\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 33\n                }, this)\n              }, position, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 21\n              }, this);\n            })\n          }, rowIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Game Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `turn-indicator ${game.turn ? 'active' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"piece\",\n              children: game.turn ? '♟' : '♙'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text\",\n              children: game.turn ? \"Your turn\" : \"Opponent's turn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Move History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"move-history\",\n            children: game.moveHistory.map((move, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"move-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"move-number\",\n                children: [Math.floor(index / 2) + 1, \".\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"move-text\",\n                children: move\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-button secondary\",\n            onClick: handleResign,\n            children: \"Resign\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-button\",\n            onClick: handleDrawOffer,\n            children: \"Offer Draw\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"QwVYquX/C/uHvaThGVu3CuKzKfE=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","axios","io","ChessPiece","Navbar","jsxDEV","_jsxDEV","Game","_s","id","navigate","game","setGame","selectedPiece","setSelectedPiece","possibleMoves","setPossibleMoves","error","setError","socket","setSocket","lastMove","setLastMove","playerColor","setPlayerColor","userId","setUserId","user","setUser","token","localStorage","getItem","JSON","parse","newSocket","auth","transports","query","gameId","on","console","log","emit","playerId","gameState","updatedGame","lastMoveInfo","from","to","captured","message","fetchGame","disconnect","response","get","headers","Authorization","gameData","data","players","white","black","err","handleSquareClick","row","col","status","piece","board","isWhitePiece","toUpperCase","isWhiteTurn","turn","isLocalMode","gameMode","canMove","setTimeout","fromRow","fromCol","isWhiteSelectedPiece","canMoveSelected","post","success","_err$response","_err$response$data","moves","length","isSquareHighlighted","some","move","handleLogout","removeItem","handleResign","handleDrawOffer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","username","onLogout","map","rowIndex","colIndex","isWhite","position","String","fromCharCode","isSelected","isPossibleMove","isPossibleCapture","isCapture","onClick","moveHistory","index","Math","floor","_c","$RefreshReg$"],"sources":["D:/My React Apps/chess/chess-frontend/src/components/Game.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport io from 'socket.io-client';\r\nimport ChessPiece from './ChessPiece';\r\nimport Navbar from './Navbar';\r\nimport './Game.css';\r\n\r\nconst Game = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [game, setGame] = useState(null);\r\n  const [selectedPiece, setSelectedPiece] = useState(null);\r\n  const [possibleMoves, setPossibleMoves] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const [socket, setSocket] = useState(null);\r\n  const [lastMove, setLastMove] = useState(null);\r\n  const [playerColor, setPlayerColor] = useState(null);\r\n  const [userId, setUserId] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    \r\n    if (!token || !user) {\r\n      navigate('/login');\r\n      return;\r\n    }\r\n\r\n    setUserId(user.id);\r\n    setUser(user);\r\n\r\n    // Connect to socket with authentication\r\n    const newSocket = io('http://localhost:5000', {\r\n      auth: { token },\r\n      transports: ['websocket'],\r\n      query: {\r\n        userId: user.id,\r\n        gameId: id\r\n      }\r\n    });\r\n\r\n    // Socket event handlers\r\n    newSocket.on('connect', () => {\r\n      console.log('Socket connected');\r\n      // Join game room after connection is established\r\n      newSocket.emit('join-game', { \r\n        gameId: id,\r\n        playerId: user.id\r\n      });\r\n    });\r\n\r\n    newSocket.on('connect_error', (error) => {\r\n      console.error('Socket connection error:', error);\r\n      setError('Failed to connect to game server');\r\n    });\r\n\r\n    newSocket.on('game-state', ({ game: gameState }) => {\r\n      console.log('Received game state:', gameState);\r\n      setGame(gameState);\r\n    });\r\n\r\n    newSocket.on('game-updated', ({ game: updatedGame, lastMoveInfo }) => {\r\n      console.log('Game updated:', updatedGame);\r\n      setGame(updatedGame);\r\n      if (lastMoveInfo) {\r\n        setLastMove({\r\n          from: lastMoveInfo.from,\r\n          to: lastMoveInfo.to,\r\n          captured: lastMoveInfo.captured\r\n        });\r\n      }\r\n    });\r\n\r\n    newSocket.on('error', ({ message }) => {\r\n      console.error('Game error:', message);\r\n      setError(message);\r\n    });\r\n\r\n    setSocket(newSocket);\r\n\r\n    // Fetch initial game state\r\n    fetchGame();\r\n\r\n    return () => {\r\n      if (newSocket) {\r\n        newSocket.disconnect();\r\n      }\r\n    };\r\n  }, [id, navigate]);\r\n\r\n  const fetchGame = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const user = JSON.parse(localStorage.getItem('user'));\r\n      const response = await axios.get(`http://localhost:5000/api/games/${id}`, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      \r\n      const gameData = response.data.game;\r\n      setGame(gameData);\r\n      \r\n      // Set player color\r\n      if (gameData.players.white === user.id) {\r\n        setPlayerColor('white');\r\n      } else if (gameData.players.black === user.id) {\r\n        setPlayerColor('black');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching game:', err);\r\n      setError('Failed to fetch game');\r\n    }\r\n  };\r\n\r\n  const handleSquareClick = async (row, col) => {\r\n    if (!game || game.status !== 'active') return;\r\n\r\n    const piece = game.board[row][col];\r\n    const isWhitePiece = piece && piece.toUpperCase() === piece;\r\n    const isWhiteTurn = !game.turn;\r\n\r\n    // For local mode, allow moves for both colors\r\n    const isLocalMode = game.gameMode === 'local';\r\n    const canMove = isLocalMode || \r\n      (isWhitePiece === isWhiteTurn && \r\n       ((isWhitePiece && playerColor === 'white') || \r\n        (!isWhitePiece && playerColor === 'black')));\r\n\r\n    // If it's not the player's turn, show message and return\r\n    if (!isLocalMode && isWhiteTurn !== (playerColor === 'white')) {\r\n      setSelectedPiece(null);\r\n      setPossibleMoves([]);\r\n      setError(`It's ${isWhiteTurn ? 'White' : 'Black'}'s turn`);\r\n      // Clear error message after 2 seconds\r\n      setTimeout(() => setError(''), 2000);\r\n      return;\r\n    }\r\n\r\n    if (selectedPiece) {\r\n      // Try to move the selected piece\r\n      const [fromRow, fromCol] = selectedPiece;\r\n      const isWhiteSelectedPiece = game.board[fromRow][fromCol].toUpperCase() === game.board[fromRow][fromCol];\r\n      \r\n      // For local mode, allow moves for both colors\r\n      const canMoveSelected = isLocalMode || \r\n        (isWhiteSelectedPiece === isWhiteTurn && \r\n         ((isWhiteSelectedPiece && playerColor === 'white') || \r\n          (!isWhiteSelectedPiece && playerColor === 'black')));\r\n\r\n      if (canMoveSelected) {\r\n        try {\r\n          const token = localStorage.getItem('token');\r\n          const user = JSON.parse(localStorage.getItem('user'));\r\n          const response = await axios.post(\r\n            `http://localhost:5000/api/games/${id}/move`,\r\n            {\r\n              from: selectedPiece,\r\n              to: [row, col],\r\n              playerId: user.id\r\n            },\r\n            { headers: { Authorization: `Bearer ${token}` } }\r\n          );\r\n\r\n          if (response.data.success) {\r\n            setSelectedPiece(null);\r\n            setPossibleMoves([]);\r\n            setError(''); // Clear any existing error messages\r\n          }\r\n        } catch (err) {\r\n          console.error('Error making move:', err);\r\n          setError(err.response?.data?.error || 'Failed to make move');\r\n          // Clear selection on error\r\n          setSelectedPiece(null);\r\n          setPossibleMoves([]);\r\n        }\r\n      } else {\r\n        // If clicked on an invalid square, clear selection\r\n        setSelectedPiece(null);\r\n        setPossibleMoves([]);\r\n      }\r\n    } else if (piece && canMove) {\r\n      // Select a piece\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await axios.post(\r\n          `http://localhost:5000/api/games/${id}/possible-moves`,\r\n          { from: [row, col] },\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n        \r\n        if (response.data.moves && response.data.moves.length > 0) {\r\n          setSelectedPiece({ row, col });\r\n          setPossibleMoves(response.data.moves);\r\n          setError(''); // Clear any existing error messages\r\n        }\r\n      } catch (err) {\r\n        console.error('Error getting possible moves:', err);\r\n        setError('Failed to get possible moves');\r\n      }\r\n    } else {\r\n      // If clicked on an empty square or opponent's piece, clear selection\r\n      setSelectedPiece(null);\r\n      setPossibleMoves([]);\r\n    }\r\n  };\r\n\r\n  const isSquareHighlighted = (row, col) => {\r\n    if (selectedPiece && selectedPiece.row === row && selectedPiece.col === col) {\r\n      return 'selected';\r\n    }\r\n    if (selectedPiece && possibleMoves.some(move => move.row === row && move.col === col)) {\r\n      return 'possible-move';\r\n    }\r\n    if (lastMove) {\r\n      if ((lastMove.from[0] === row && lastMove.from[1] === col) ||\r\n          (lastMove.to[0] === row && lastMove.to[1] === col)) {\r\n        return lastMove.captured ? 'capture-move' : 'last-move';\r\n      }\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    navigate('/login');\r\n  };\r\n\r\n  const handleResign = () => {\r\n    // Implement resign logic\r\n  };\r\n\r\n  const handleDrawOffer = () => {\r\n    // Implement draw offer logic\r\n  };\r\n\r\n  if (!game) {\r\n    return <div className=\"game-container\">Loading game...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"game-container\">\r\n      <Navbar username={user?.username} onLogout={handleLogout} />\r\n      <div className=\"game-content\">\r\n        <div className=\"chess-board-container\">\r\n          <div className=\"chess-board\">\r\n            {game.board.map((row, rowIndex) => (\r\n              <div key={rowIndex} className=\"board-row\">\r\n                {row.map((piece, colIndex) => {\r\n                  const isWhite = (rowIndex + colIndex) % 2 === 0;\r\n                  const position = `${String.fromCharCode(97 + colIndex)}${8 - rowIndex}`;\r\n                  const isSelected = selectedPiece && selectedPiece.row === rowIndex && selectedPiece.col === colIndex;\r\n                  const isPossibleMove = possibleMoves.some(move => \r\n                    move.row === rowIndex && move.col === colIndex\r\n                  );\r\n                  const isPossibleCapture = possibleMoves.some(move => \r\n                    move.row === rowIndex && move.col === colIndex && move.isCapture\r\n                  );\r\n\r\n                  return (\r\n                    <div\r\n                      key={position}\r\n                      className={`square ${isWhite ? 'white' : 'black'} ${\r\n                        isSelected ? 'selected' : ''\r\n                      } ${isPossibleMove ? 'possible-move' : ''} ${\r\n                        isPossibleCapture ? 'possible-capture' : ''\r\n                      }`}\r\n                      onClick={() => handleSquareClick(rowIndex, colIndex)}\r\n                    >\r\n                      {piece && <ChessPiece piece={piece} />}\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"game-info\">\r\n          <div className=\"info-card\">\r\n            <h3>Game Status</h3>\r\n            <div className={`turn-indicator ${game.turn ? 'active' : ''}`}>\r\n              <span className=\"piece\">{game.turn ? '♟' : '♙'}</span>\r\n              <span className=\"text\">\r\n                {game.turn ? \"Your turn\" : \"Opponent's turn\"}\r\n              </span>\r\n            </div>\r\n            {error && (\r\n              <div className=\"error-message\">{error}</div>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"info-card\">\r\n            <h3>Move History</h3>\r\n            <div className=\"move-history\">\r\n              {game.moveHistory.map((move, index) => (\r\n                <div key={index} className=\"move-item\">\r\n                  <span className=\"move-number\">{Math.floor(index / 2) + 1}.</span>\r\n                  <span className=\"move-text\">{move}</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"game-controls\">\r\n            <button className=\"control-button secondary\" onClick={handleResign}>\r\n              Resign\r\n            </button>\r\n            <button className=\"control-button\" onClick={handleDrawOffer}>\r\n              Offer Draw\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}