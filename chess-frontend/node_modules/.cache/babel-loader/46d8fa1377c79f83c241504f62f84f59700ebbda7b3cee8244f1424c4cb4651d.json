{"ast":null,"code":"// api.js - Chess API client\nimport axios from 'axios';\nclass ChessAPI {\n  constructor() {\n    this.baseURL = 'http://localhost:5000/api';\n    this.axios = axios.create({\n      baseURL: this.baseURL,\n      timeout: 10000,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n  async createGame(gameMode = 'local') {\n    try {\n      const response = await this.axios.post('/games', {\n        gameMode,\n        playerId: this.generatePlayerId()\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error creating game:', error);\n      throw error;\n    }\n  }\n  async getGame(gameId) {\n    try {\n      const response = await this.axios.get(`/games/${gameId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching game:', error);\n      throw error;\n    }\n  }\n  async makeMove(gameId, from, to) {\n    try {\n      const response = await this.axios.post(`/games/${gameId}/move`, {\n        from,\n        to,\n        playerId: this.getPlayerId()\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error making move:', error);\n      throw error;\n    }\n  }\n  async joinGame(gameId) {\n    try {\n      const response = await this.axios.post(`/games/${gameId}/join`, {\n        playerId: this.generatePlayerId()\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error joining game:', error);\n      throw error;\n    }\n  }\n  async getAvailableGames() {\n    try {\n      const response = await this.axios.get('/games');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching available games:', error);\n      throw error;\n    }\n  }\n\n  // Helper methods\n  generatePlayerId() {\n    return 'player_' + Math.random().toString(36).substr(2, 9);\n  }\n  getPlayerId() {\n    // In a real app, you'd store this in localStorage or state management\n    return 'player_' + Math.random().toString(36).substr(2, 9);\n  }\n}\nexport default ChessAPI;","map":{"version":3,"names":["axios","ChessAPI","constructor","baseURL","create","timeout","headers","createGame","gameMode","response","post","playerId","generatePlayerId","data","error","console","getGame","gameId","get","makeMove","from","to","getPlayerId","joinGame","getAvailableGames","Math","random","toString","substr"],"sources":["D:/My React Apps/chess/chess-frontend/src/api.js"],"sourcesContent":["// api.js - Chess API client\r\nimport axios from 'axios';\r\n\r\nclass ChessAPI {\r\n  constructor() {\r\n    this.baseURL = 'http://localhost:5000/api';\r\n    this.axios = axios.create({\r\n      baseURL: this.baseURL,\r\n      timeout: 10000,\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n\r\n  async createGame(gameMode = 'local') {\r\n    try {\r\n      const response = await this.axios.post('/games', {\r\n        gameMode,\r\n        playerId: this.generatePlayerId()\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error creating game:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getGame(gameId) {\r\n    try {\r\n      const response = await this.axios.get(`/games/${gameId}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching game:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async makeMove(gameId, from, to) {\r\n    try {\r\n      const response = await this.axios.post(`/games/${gameId}/move`, {\r\n        from,\r\n        to,\r\n        playerId: this.getPlayerId()\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error making move:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async joinGame(gameId) {\r\n    try {\r\n      const response = await this.axios.post(`/games/${gameId}/join`, {\r\n        playerId: this.generatePlayerId()\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error joining game:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getAvailableGames() {\r\n    try {\r\n      const response = await this.axios.get('/games');\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching available games:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Helper methods\r\n  generatePlayerId() {\r\n    return 'player_' + Math.random().toString(36).substr(2, 9);\r\n  }\r\n\r\n  getPlayerId() {\r\n    // In a real app, you'd store this in localStorage or state management\r\n    return 'player_' + Math.random().toString(36).substr(2, 9);\r\n  }\r\n}\r\n\r\nexport default ChessAPI;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}