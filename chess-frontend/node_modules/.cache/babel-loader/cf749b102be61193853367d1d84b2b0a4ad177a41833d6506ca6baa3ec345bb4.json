{"ast":null,"code":"var _jsxFileName = \"D:\\\\My React Apps\\\\chess\\\\chess-frontend\\\\src\\\\components\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport ChessPiece from './ChessPiece';\nimport './Game.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [game, setGame] = useState(null);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  const [possibleMoves, setPossibleMoves] = useState([]);\n  const [error, setError] = useState('');\n  const [socket, setSocket] = useState(null);\n  const [lastMove, setLastMove] = useState(null);\n  const [playerColor, setPlayerColor] = useState(null);\n  const [userId, setUserId] = useState(null);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (!token || !user) {\n      navigate('/login');\n      return;\n    }\n    setUserId(user.id);\n\n    // Connect to socket with authentication\n    const newSocket = io('http://localhost:5000', {\n      auth: {\n        token\n      },\n      transports: ['websocket'],\n      query: {\n        userId: user.id,\n        gameId: id\n      }\n    });\n\n    // Socket event handlers\n    newSocket.on('connect', () => {\n      console.log('Socket connected');\n      // Join game room after connection is established\n      newSocket.emit('join-game', {\n        gameId: id,\n        playerId: user.id\n      });\n    });\n    newSocket.on('connect_error', error => {\n      console.error('Socket connection error:', error);\n      setError('Failed to connect to game server');\n    });\n    newSocket.on('game-state', ({\n      game: gameState\n    }) => {\n      console.log('Received game state:', gameState);\n      setGame(gameState);\n    });\n    newSocket.on('game-updated', ({\n      game: updatedGame,\n      lastMoveInfo\n    }) => {\n      console.log('Game updated:', updatedGame);\n      setGame(updatedGame);\n      if (lastMoveInfo) {\n        setLastMove({\n          from: lastMoveInfo.from,\n          to: lastMoveInfo.to,\n          captured: lastMoveInfo.captured\n        });\n      }\n    });\n    newSocket.on('error', ({\n      message\n    }) => {\n      console.error('Game error:', message);\n      setError(message);\n    });\n    setSocket(newSocket);\n\n    // Fetch initial game state\n    fetchGame();\n    return () => {\n      if (newSocket) {\n        newSocket.disconnect();\n      }\n    };\n  }, [id, navigate]);\n  const fetchGame = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const user = JSON.parse(localStorage.getItem('user'));\n      const response = await axios.get(`http://localhost:5000/api/games/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const gameData = response.data.game;\n      setGame(gameData);\n\n      // Set player color\n      if (gameData.players.white === user.id) {\n        setPlayerColor('white');\n      } else if (gameData.players.black === user.id) {\n        setPlayerColor('black');\n      }\n    } catch (err) {\n      console.error('Error fetching game:', err);\n      setError('Failed to fetch game');\n    }\n  };\n  const handleSquareClick = async (row, col) => {\n    if (!game || game.status !== 'active') return;\n    const piece = game.board[row][col];\n    const isWhitePiece = piece && piece.toUpperCase() === piece;\n    const isWhiteTurn = !game.turn;\n\n    // For local mode, allow moves for both colors\n    const isLocalMode = game.gameMode === 'local';\n    const canMove = isLocalMode || isWhitePiece === isWhiteTurn && (isWhitePiece && playerColor === 'white' || !isWhitePiece && playerColor === 'black');\n    if (selectedPiece) {\n      // Try to move the selected piece\n      const [fromRow, fromCol] = selectedPiece;\n      const isWhiteSelectedPiece = game.board[fromRow][fromCol].toUpperCase() === game.board[fromRow][fromCol];\n\n      // For local mode, allow moves for both colors\n      const canMoveSelected = isLocalMode || isWhiteSelectedPiece === isWhiteTurn && (isWhiteSelectedPiece && playerColor === 'white' || !isWhiteSelectedPiece && playerColor === 'black');\n      if (canMoveSelected) {\n        try {\n          const token = localStorage.getItem('token');\n          const user = JSON.parse(localStorage.getItem('user'));\n          const response = await axios.post(`http://localhost:5000/api/games/${id}/move`, {\n            from: selectedPiece,\n            to: [row, col],\n            playerId: user.id\n          }, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          if (response.data.success) {\n            setSelectedPiece(null);\n            setPossibleMoves([]);\n          }\n        } catch (err) {\n          var _err$response, _err$response$data;\n          console.error('Error making move:', err);\n          setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Failed to make move');\n        }\n      }\n    } else if (piece && canMove) {\n      // Select a piece\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.post(`http://localhost:5000/api/games/${id}/possible-moves`, {\n          from: [row, col]\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.data.moves && response.data.moves.length > 0) {\n          setSelectedPiece([row, col]);\n          setPossibleMoves(response.data.moves);\n        }\n      } catch (err) {\n        console.error('Error getting possible moves:', err);\n        setError('Failed to get possible moves');\n      }\n    }\n  };\n  const isSquareHighlighted = (row, col) => {\n    if (selectedPiece && selectedPiece[0] === row && selectedPiece[1] === col) {\n      return 'selected';\n    }\n    if (selectedPiece && possibleMoves.some(move => move[0] === row && move[1] === col)) {\n      return 'possible-move';\n    }\n    if (lastMove) {\n      if (lastMove.from[0] === row && lastMove.from[1] === col || lastMove.to[0] === row && lastMove.to[1] === col) {\n        return lastMove.captured ? 'capture-move' : 'last-move';\n      }\n    }\n    return '';\n  };\n  if (!game) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: \"Loading game...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Chess Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/lobby'),\n        children: \"Back to Lobby\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"turn-indicator\",\n        children: game.status === 'active' ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Current Turn: \", game.turn ? 'Black' : 'White']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Game Status: \", game.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), game.inCheck && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"check-indicator\",\n        children: [game.checkPlayer, \" is in check!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: game.board.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: row.map((piece, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `board-square ${(rowIndex + colIndex) % 2 === 0 ? 'white' : 'black'} ${isSquareHighlighted(rowIndex, colIndex)}`,\n          onClick: () => handleSquareClick(rowIndex, colIndex),\n          children: piece && /*#__PURE__*/_jsxDEV(ChessPiece, {\n            piece: piece\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 27\n          }, this)\n        }, `${rowIndex}-${colIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"u6GO6ftj+8j2vMOrsc2fal5mGV0=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","axios","io","ChessPiece","jsxDEV","_jsxDEV","Game","_s","id","navigate","game","setGame","selectedPiece","setSelectedPiece","possibleMoves","setPossibleMoves","error","setError","socket","setSocket","lastMove","setLastMove","playerColor","setPlayerColor","userId","setUserId","token","localStorage","getItem","user","JSON","parse","newSocket","auth","transports","query","gameId","on","console","log","emit","playerId","gameState","updatedGame","lastMoveInfo","from","to","captured","message","fetchGame","disconnect","response","get","headers","Authorization","gameData","data","players","white","black","err","handleSquareClick","row","col","status","piece","board","isWhitePiece","toUpperCase","isWhiteTurn","turn","isLocalMode","gameMode","canMove","fromRow","fromCol","isWhiteSelectedPiece","canMoveSelected","post","success","_err$response","_err$response$data","moves","length","isSquareHighlighted","some","move","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","inCheck","checkPlayer","map","rowIndex","colIndex","_c","$RefreshReg$"],"sources":["D:/My React Apps/chess/chess-frontend/src/components/Game.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport io from 'socket.io-client';\r\nimport ChessPiece from './ChessPiece';\r\nimport './Game.css';\r\n\r\nconst Game = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [game, setGame] = useState(null);\r\n  const [selectedPiece, setSelectedPiece] = useState(null);\r\n  const [possibleMoves, setPossibleMoves] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const [socket, setSocket] = useState(null);\r\n  const [lastMove, setLastMove] = useState(null);\r\n  const [playerColor, setPlayerColor] = useState(null);\r\n  const [userId, setUserId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    \r\n    if (!token || !user) {\r\n      navigate('/login');\r\n      return;\r\n    }\r\n\r\n    setUserId(user.id);\r\n\r\n    // Connect to socket with authentication\r\n    const newSocket = io('http://localhost:5000', {\r\n      auth: { token },\r\n      transports: ['websocket'],\r\n      query: {\r\n        userId: user.id,\r\n        gameId: id\r\n      }\r\n    });\r\n\r\n    // Socket event handlers\r\n    newSocket.on('connect', () => {\r\n      console.log('Socket connected');\r\n      // Join game room after connection is established\r\n      newSocket.emit('join-game', { \r\n        gameId: id,\r\n        playerId: user.id\r\n      });\r\n    });\r\n\r\n    newSocket.on('connect_error', (error) => {\r\n      console.error('Socket connection error:', error);\r\n      setError('Failed to connect to game server');\r\n    });\r\n\r\n    newSocket.on('game-state', ({ game: gameState }) => {\r\n      console.log('Received game state:', gameState);\r\n      setGame(gameState);\r\n    });\r\n\r\n    newSocket.on('game-updated', ({ game: updatedGame, lastMoveInfo }) => {\r\n      console.log('Game updated:', updatedGame);\r\n      setGame(updatedGame);\r\n      if (lastMoveInfo) {\r\n        setLastMove({\r\n          from: lastMoveInfo.from,\r\n          to: lastMoveInfo.to,\r\n          captured: lastMoveInfo.captured\r\n        });\r\n      }\r\n    });\r\n\r\n    newSocket.on('error', ({ message }) => {\r\n      console.error('Game error:', message);\r\n      setError(message);\r\n    });\r\n\r\n    setSocket(newSocket);\r\n\r\n    // Fetch initial game state\r\n    fetchGame();\r\n\r\n    return () => {\r\n      if (newSocket) {\r\n        newSocket.disconnect();\r\n      }\r\n    };\r\n  }, [id, navigate]);\r\n\r\n  const fetchGame = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const user = JSON.parse(localStorage.getItem('user'));\r\n      const response = await axios.get(`http://localhost:5000/api/games/${id}`, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      \r\n      const gameData = response.data.game;\r\n      setGame(gameData);\r\n      \r\n      // Set player color\r\n      if (gameData.players.white === user.id) {\r\n        setPlayerColor('white');\r\n      } else if (gameData.players.black === user.id) {\r\n        setPlayerColor('black');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching game:', err);\r\n      setError('Failed to fetch game');\r\n    }\r\n  };\r\n\r\n  const handleSquareClick = async (row, col) => {\r\n    if (!game || game.status !== 'active') return;\r\n\r\n    const piece = game.board[row][col];\r\n    const isWhitePiece = piece && piece.toUpperCase() === piece;\r\n    const isWhiteTurn = !game.turn;\r\n\r\n    // For local mode, allow moves for both colors\r\n    const isLocalMode = game.gameMode === 'local';\r\n    const canMove = isLocalMode || \r\n      (isWhitePiece === isWhiteTurn && \r\n       ((isWhitePiece && playerColor === 'white') || \r\n        (!isWhitePiece && playerColor === 'black')));\r\n\r\n    if (selectedPiece) {\r\n      // Try to move the selected piece\r\n      const [fromRow, fromCol] = selectedPiece;\r\n      const isWhiteSelectedPiece = game.board[fromRow][fromCol].toUpperCase() === game.board[fromRow][fromCol];\r\n      \r\n      // For local mode, allow moves for both colors\r\n      const canMoveSelected = isLocalMode || \r\n        (isWhiteSelectedPiece === isWhiteTurn && \r\n         ((isWhiteSelectedPiece && playerColor === 'white') || \r\n          (!isWhiteSelectedPiece && playerColor === 'black')));\r\n\r\n      if (canMoveSelected) {\r\n        try {\r\n          const token = localStorage.getItem('token');\r\n          const user = JSON.parse(localStorage.getItem('user'));\r\n          const response = await axios.post(\r\n            `http://localhost:5000/api/games/${id}/move`,\r\n            {\r\n              from: selectedPiece,\r\n              to: [row, col],\r\n              playerId: user.id\r\n            },\r\n            { headers: { Authorization: `Bearer ${token}` } }\r\n          );\r\n\r\n          if (response.data.success) {\r\n            setSelectedPiece(null);\r\n            setPossibleMoves([]);\r\n          }\r\n        } catch (err) {\r\n          console.error('Error making move:', err);\r\n          setError(err.response?.data?.error || 'Failed to make move');\r\n        }\r\n      }\r\n    } else if (piece && canMove) {\r\n      // Select a piece\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await axios.post(\r\n          `http://localhost:5000/api/games/${id}/possible-moves`,\r\n          { from: [row, col] },\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n        \r\n        if (response.data.moves && response.data.moves.length > 0) {\r\n          setSelectedPiece([row, col]);\r\n          setPossibleMoves(response.data.moves);\r\n        }\r\n      } catch (err) {\r\n        console.error('Error getting possible moves:', err);\r\n        setError('Failed to get possible moves');\r\n      }\r\n    }\r\n  };\r\n\r\n  const isSquareHighlighted = (row, col) => {\r\n    if (selectedPiece && selectedPiece[0] === row && selectedPiece[1] === col) {\r\n      return 'selected';\r\n    }\r\n    if (selectedPiece && possibleMoves.some(move => move[0] === row && move[1] === col)) {\r\n      return 'possible-move';\r\n    }\r\n    if (lastMove) {\r\n      if ((lastMove.from[0] === row && lastMove.from[1] === col) ||\r\n          (lastMove.to[0] === row && lastMove.to[1] === col)) {\r\n        return lastMove.captured ? 'capture-move' : 'last-move';\r\n      }\r\n    }\r\n    return '';\r\n  };\r\n\r\n  if (!game) {\r\n    return <div className=\"game-container\">Loading game...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"game-container\">\r\n      <div className=\"game-header\">\r\n        <h1>Chess Game</h1>\r\n        <button onClick={() => navigate('/lobby')}>Back to Lobby</button>\r\n      </div>\r\n\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n\r\n      <div className=\"game-info\">\r\n        <div className=\"turn-indicator\">\r\n          {game.status === 'active' ? (\r\n            <span>Current Turn: {game.turn ? 'Black' : 'White'}</span>\r\n          ) : (\r\n            <span>Game Status: {game.status}</span>\r\n          )}\r\n        </div>\r\n        {game.inCheck && (\r\n          <div className=\"check-indicator\">\r\n            {game.checkPlayer} is in check!\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"board\">\r\n        {game.board.map((row, rowIndex) => (\r\n          <div key={rowIndex} className=\"board-row\">\r\n            {row.map((piece, colIndex) => (\r\n              <div\r\n                key={`${rowIndex}-${colIndex}`}\r\n                className={`board-square ${(rowIndex + colIndex) % 2 === 0 ? 'white' : 'black'} ${isSquareHighlighted(rowIndex, colIndex)}`}\r\n                onClick={() => handleSquareClick(rowIndex, colIndex)}\r\n              >\r\n                {piece && <ChessPiece piece={piece} />}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}